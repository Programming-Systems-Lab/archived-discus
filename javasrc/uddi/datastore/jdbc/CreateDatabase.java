/* * jUDDI - An open source Java implementation of UDDI v2.0 * http://juddi.org/ * * Copyright (c) 2002, Steve Viens and contributors * All rights reserved. */package psl.discus.javasrc.uddi.datastore.jdbc;/** * @author  Steve Viens * @version 0.6 */public class CreateDatabase{  /**   *   */  private static void dropDatabase(java.sql.Connection connection)    throws Exception  {    if (connection == null)      throw new RuntimeException("Connection is null - cannot drop the database");    BusinessEntityTable.drop(connection);    BusinessDescTable.drop(connection);    BusinessCategoryTable.drop(connection);    BusinessIdentifierTable.drop(connection);    BusinessNameTable.drop(connection);    DiscoveryURLTable.drop(connection);    ContactTable.drop(connection);    ContactDescTable.drop(connection);    PhoneTable.drop(connection);    EmailTable.drop(connection);    AddressTable.drop(connection);    AddressLineTable.drop(connection);    BusinessServiceTable.drop(connection);    ServiceDescTable.drop(connection);    ServiceCategoryTable.drop(connection);    ServiceNameTable.drop(connection);    BindingTemplateTable.drop(connection);    BindingDescTable.drop(connection);    TModelInstanceInfoTable.drop(connection);    TModelInstanceInfoDescTable.drop(connection);    InstanceDetailsTable.drop(connection);    InstanceDetailsDescTable.drop(connection);    InstanceDetailsDocTable.drop(connection);    InstanceDetailsDocDescTable.drop(connection);    TModelTable.drop(connection);    TModelDescTable.drop(connection);    TModelCategoryTable.drop(connection);    TModelIdentifierTable.drop(connection);    PublisherAssertionTable.drop(connection);  }  /**   *   */  private static void createDatabase(java.sql.Connection connection)    throws Exception  {    if (connection == null)      throw new RuntimeException("Connection is null - cannot create the database");    BusinessEntityTable.create(connection);    BusinessDescTable.create(connection);    BusinessCategoryTable.create(connection);    BusinessIdentifierTable.create(connection);    BusinessNameTable.create(connection);    DiscoveryURLTable.create(connection);    ContactTable.create(connection);    ContactDescTable.create(connection);    PhoneTable.create(connection);    EmailTable.create(connection);    AddressTable.create(connection);    AddressLineTable.create(connection);    BusinessServiceTable.create(connection);    ServiceDescTable.create(connection);    ServiceCategoryTable.create(connection);    ServiceNameTable.create(connection);    BindingTemplateTable.create(connection);    BindingDescTable.create(connection);    TModelInstanceInfoTable.create(connection);    TModelInstanceInfoDescTable.create(connection);    InstanceDetailsTable.create(connection);    InstanceDetailsDescTable.create(connection);    InstanceDetailsDocTable.create(connection);    InstanceDetailsDocDescTable.create(connection);    TModelTable.create(connection);    TModelDescTable.create(connection);    TModelCategoryTable.create(connection);    TModelIdentifierTable.create(connection);    PublisherAssertionTable.create(connection);  }  /**   *   */  private static void testDatabase(java.sql.Connection connection,int testCount)    throws Exception  {    if (connection == null)      throw new RuntimeException("Connection is null - cannot continue with test");    for (int i=0; i<testCount; i++)    {      BusinessEntityTable.test(connection);      BusinessDescTable.test(connection);      BusinessCategoryTable.test(connection);      BusinessIdentifierTable.test(connection);      BusinessNameTable.test(connection);      DiscoveryURLTable.test(connection);      ContactTable.test(connection);      ContactDescTable.test(connection);      PhoneTable.test(connection);      EmailTable.test(connection);      AddressTable.test(connection);      AddressLineTable.test(connection);      BusinessServiceTable.test(connection);      ServiceDescTable.test(connection);      ServiceCategoryTable.test(connection);      ServiceNameTable.test(connection);      BindingTemplateTable.test(connection);      BindingDescTable.test(connection);      TModelInstanceInfoTable.test(connection);      TModelInstanceInfoDescTable.test(connection);      InstanceDetailsTable.test(connection);      InstanceDetailsDescTable.test(connection);      InstanceDetailsDocTable.test(connection);      InstanceDetailsDocDescTable.test(connection);      TModelTable.test(connection);      TModelDescTable.test(connection);      TModelCategoryTable.test(connection);      TModelIdentifierTable.test(connection);      PublisherAssertionTable.test(connection);    }  }    /**   *   */  public static void main(String[] args)  {    psl.discus.javasrc.uddi.util.SysManager.startup();    ConnectionPool pool = ConnectionPool.getInstance();    PooledConnection pooledConnection = pool.acquirePooledConnection();    java.sql.Connection connection = pooledConnection.getConnection();    if (pooledConnection == null)      throw new RuntimeException("PooledConnection is null - cannot continue with test");    if (connection == null)      throw new RuntimeException("Connection is null - cannot continue with test");    int testIter = 0;    if (args.length > 0)      testIter = Integer.parseInt(args[0]);    try    {      // drop all tables database      long startDrop = System.currentTimeMillis();      dropDatabase(connection);      long endDrop = System.currentTimeMillis();      System.out.println("*** Drop Database Completed (time="+(endDrop-startDrop)+") ***\n");      // create the database      long startCreate = System.currentTimeMillis();      createDatabase(connection);      long endCreate = System.currentTimeMillis();      System.out.println("*** Create Database Completed (time="+(endCreate-startCreate)+") ***\n");      // test the XxxxTable classes      long startTest = System.currentTimeMillis();      testDatabase(connection,testIter);      long endTest = System.currentTimeMillis();      System.out.println("*** Test Database Completed (time="+(endTest-startTest)+") ***\n");    }    catch(Exception ex)    {      ex.printStackTrace();    }    finally    {      pool.releasePooledConnection(pooledConnection);      pool.destroy();    }        psl.discus.javasrc.uddi.util.SysManager.shutdown();  }}