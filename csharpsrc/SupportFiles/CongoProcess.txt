<?xml version="1.0" encoding="ISO-8859-1" ?>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:xsd="http://www.w3.org/2000/10/XMLSchema#" xmlns:daml="http://www.daml.org/2001/03/daml+oil#" xmlns:dex="http://www.daml.org/2001/03/daml+oil-ex#" xmlns:exd="http://www.daml.org/2001/03/daml+oil-ex-dt#" xmlns:service="http://www.daml.org/services/daml-s/2001/10/Service.daml#" xmlns:process="http://www.daml.org/services/daml-s/2001/10/Process.daml#" xmlns:time="http://www.ai.sri.com/~daml/ontologies/sri-basic/1-0/Time.daml#" xmlns="http://www.daml.org/services/daml-s/2001/10/Congo.daml#">
<daml:Ontology rdf:about="">
  <daml:versionInfo>$Id$</daml:versionInfo> 
  <rdfs:comment>A B2C bookbuying example of DAML-S (DARPA Agent Markup Language for Services; see http://www.daml.org/services/) usage, illustrating a simple use of the process model. This is a sketch; not a complete example. The service described here is a book buying (or selling, depending on your perspective) service from www.congo.com. We present two forms of the service. First, there's a one-step form, with the service treated as ATOMIC; i.e., no interactions between buying and selling agents are required, apart from invocation of the service and receipt of its outputs by the buyer. Given certain inputs and parameters, the service provides certain outputs and has specific effects. Second, a full-fledged version of the service is specified, showing its composition from its component services. The atomic service is CongoBuy, which has specified inputs, outputs, preconditions and effects (IOPEs). The full-fledged version of the service, ExpandedCongoBuy, includes an arrangement of subprocesses LocateBook, PutInCart, SignIn, CreateAcct, CreateProfile, LoadProfile, SpecifyDeliveryDetails, FinalizeBuy each with its own IOPE spec. Created by Srini Narayanan (srini@ai.sri.com). Modifications by Mark Burstein, David Martin, Sheila McIlraith, Srini Narayanan, Terri Payne.</rdfs:comment> 
  <daml:imports rdf:resource="http://www.daml.org/2001/03/daml+oil" /> 
  <daml:imports rdf:resource="http://www.ai.sri.com/~daml/ontologies/sri-basic/1-0/Time.daml" /> 
  <daml:imports rdf:resource="http://www.daml.org/services/daml-s/2001/10/Service.daml" /> 
  <daml:imports rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml" /> 
  </daml:Ontology>
<!-- 

NOTES ON LANGUAGE USE:
NOTE: This DAML code employs 2 proposed properties: 
    daml:sameValuesAs
    daml:listOfInstancesOf
which are not currently part of DAML+OIL.

The daml:sameValuesAs property is used here only in the definitions
of (IOPE) properties of composite processes (but there is nothing about
daml:sameValuesAs that limits its use in this way).

Input, output, precondition, and effect properties of composite
processes can, in principle, be automatically generated by tools.
Since such tools don't yet exist, they have been manually generated
for this example.



  --> 
<!-- 
###################################################
    DATA TYPES
    ###################################################

  --> 
<daml:Class rdf:ID="CreditCardType">
<daml:oneOf rdf:parseType="daml:collection">
  <CreditCardType rdf:ID="MasterCard" /> 
  <CreditCardType rdf:ID="VISA" /> 
  <CreditCardType rdf:ID="AmericanExpress" /> 
  <CreditCardType rdf:ID="DiscoverCard" /> 
  </daml:oneOf>
  </daml:Class>
<daml:Class rdf:ID="PackagingType">
<daml:oneOf rdf:parseType="daml:collection">
  <PackagingType rdf:ID="Giftwrap" /> 
  <PackagingType rdf:ID="Ordinary" /> 
  </daml:oneOf>
  </daml:Class>
<daml:Class rdf:ID="DeliveryType">
<daml:oneOf rdf:parseType="daml:collection">
  <DeliveryType rdf:ID="FedExOneDay" /> 
  <DeliveryType rdf:ID="FedEx2-3day" /> 
  <DeliveryType rdf:ID="UPS" /> 
  <DeliveryType rdf:ID="OrdinaryMail" /> 
  </daml:oneOf>
  </daml:Class>
<daml:Class rdf:ID="ValidityType">
<daml:oneOf rdf:parseType="daml:collection">
  <ValidityType rdf:ID="Valid" /> 
  <ValidityType rdf:ID="Expired" /> 
  <ValidityType rdf:ID="InvalidCCNumber" /> 
  <ValidityType rdf:ID="InvalidCCType" /> 
  <ValidityType rdf:ID="AuthorizationRefused" /> 
  </daml:oneOf>
  </daml:Class>
<daml:Class rdf:ID="BuyEffectType">
<daml:oneOf rdf:parseType="daml:collection">
  <BuyEffectType rdf:ID="OrderShipped" /> 
  <BuyEffectType rdf:ID="Failure" /> 
  </daml:oneOf>
  </daml:Class>
<!--  stub most of these for now 
  --> 
<daml:Class rdf:ID="Book">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/2001/03/daml+oil#Thing" /> 
  </daml:Class>
<daml:Class rdf:ID="EReceipt">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/2001/03/daml+oil#Thing" /> 
  </daml:Class>
<daml:Class rdf:ID="ShippingOrder">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/2001/03/daml+oil#Thing" /> 
  </daml:Class>
<daml:Class rdf:ID="SignInData">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/2001/03/daml+oil#Thing" /> 
  </daml:Class>
<rdf:Property rdf:ID="acctName">
  <rdfs:domain rdf:resource="#SignInData" /> 
  <rdfs:range rdf:resource="http://www.w3.org/2000/10/XMLSchema#string" /> 
  </rdf:Property>
<rdf:Property rdf:ID="password">
  <rdfs:domain rdf:resource="#SignInData" /> 
  <rdfs:range rdf:resource="http://www.w3.org/2000/10/XMLSchema#string" /> 
  </rdf:Property>
<daml:Class rdf:ID="ProfileInfo">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/2001/03/daml+oil#Thing" /> 
  </daml:Class>
<daml:Class rdf:ID="AcctInfo">
<daml:unionOf rdf:parseType="daml:collection">
  <daml:Class rdf:about="#SignInData" /> 
  <daml:Class rdf:about="#ProfileInfo" /> 
  </daml:unionOf>
  </daml:Class>
<daml:Class rdf:ID="ENotify">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/2001/03/daml+oil#Thing" /> 
  </daml:Class>
<daml:Class rdf:ID="CreateAcctOutputType">
<daml:unionOf rdf:parseType="daml:collection">
  <daml:Class rdf:about="#AcctInfo" /> 
  <daml:Class rdf:about="#ENotify" /> 
  </daml:unionOf>
  </daml:Class>
<!-- 
 Shopping cart
Holding the books is the Cart Class defined below 
various processes like AddToCart, RemoveFromCart, itemInCart?, 
etc can be defined using the Cart Class as the structure manipulated.
So the ouput/effect of these processes would manipulate the cart to
add, delete items.  (These manipulations are not yet specified here.)


  --> 
<daml:Class rdf:ID="Cart">
<daml:intersectionOf rdf:parseType="daml:collection">
  <daml:Class rdf:about="daml:List" /> 
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/2001/03/daml+oil#item" /> 
  <daml:toClass rdf:resource="#Book" /> 
  </daml:Restriction>
  </daml:intersectionOf>
  </daml:Class>
<!-- 
###################################################
    THE BLACKBOX PROCESS CongoBuy
    ###################################################

  --> 
<daml:Class rdf:ID="CongoBuy">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#SimpleProcess" /> 
  </daml:Class>
<!--  Inputs 
  --> 
<rdf:Property rdf:ID="congoBuyBookName">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#CongoBuy" /> 
  <rdfs:range rdf:resource="http://www.w3.org/2000/10/XMLSchema#string" /> 
  </rdf:Property>
<rdf:Property rdf:ID="congoBuySignInInfo">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#CongoBuy" /> 
  <rdfs:range rdf:resource="#SignInData" /> 
  </rdf:Property>
<!-- 
 
2 Preconditions: AccountExists and CreditExists.  The
range of the preconditions is a condition object with a
conditionValue property.  TBD: How to indicate that the conditionValue
(output) property of CreditExists holds the operative value.


  --> 
<daml:Class rdf:ID="CreditExists">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#Condition" /> 
  </daml:Class>
<daml:Class rdf:ID="AcctExists">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#Condition" /> 
  </daml:Class>
<rdf:Property rdf:ID="congoBuyAcctExistsPrecondition">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#precondition" /> 
  <rdfs:domain rdf:resource="#CongoBuy" /> 
  <rdfs:range rdf:resource="#AcctExists" /> 
  </rdf:Property>
<rdf:Property rdf:ID="congoBuyCreditExistsPrecondition">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#precondition" /> 
  <rdfs:domain rdf:resource="#CongoBuy" /> 
  <rdfs:range rdf:resource="#CreditExists" /> 
  </rdf:Property>
<!--  TWO OUTPUTS, E-RECEIPT AND SHIPPING-ORDER 
  --> 
<rdf:Property rdf:ID="congoBuyReceipt">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#output" /> 
  <rdfs:domain rdf:resource="#CongoBuy" /> 
  <rdfs:range rdf:resource="#EReceipt" /> 
  </rdf:Property>
<rdf:Property rdf:ID="congoBuyShippingOrder">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#output" /> 
  <rdfs:domain rdf:resource="#CongoBuy" /> 
  <rdfs:range rdf:resource="#ShippingOrder" /> 
  </rdf:Property>
<!--  Other parameters 
  --> 
<rdf:Property rdf:ID="congoBuyCreditCardValidity">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#parameter" /> 
  <rdfs:domain rdf:resource="#CongoBuy" /> 
  <rdfs:range rdf:resource="#ValidityType" /> 
  </rdf:Property>
<!-- 
 
THE EFFECT IS EITHER ORDERSHIPPED OR FAILURE. Conditional
Effects would require an If-Then-Else range. TBD... 


  --> 
<rdf:Property rdf:ID="congoBuyEffect">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#effect" /> 
  <rdfs:domain rdf:resource="#CongoBuy" /> 
  <rdfs:range rdf:resource="#BuyEffectType" /> 
  </rdf:Property>
<!-- 
###################################################
    THE COMPOSITE PROCESS: ExpandedCongoBuy
        (given in top-down order)
    ###################################################

  --> 
<!-- 
 

Now for the full-fledged book-buying process, ExpandedCongoBuy. This
is more complicated since it has to specify the process schema
including alternatives, conditional executions, etc. 

We build the class recursively in a top-down manner. The basic idea is
that each CompositeProcess is composedOf a ControlConstruct, which may
be a Sequence, Alternative, If-then-else, etc.  Each such
ConstrolConstruct, in turn, has a "components" property (a list or
bag), which specifies the classes of the subcomponents of the
ControlConstruct. These classes may themselves be processes or control
constructs.  Finally we bottom out when the components of a composite
process are atomic processes.

In the Congo example we assume the following basic structure for the
composition. The main steps are to locate a book and to then buy
it. While (for exposition) we assume that the locate book is an atomic
process (without components), the buying of a book involves a sequence
of subprocesses that correspond to specifying a payment method,
specifying the details of delivery (address, wrapping type, etc.) and
finalizing the buy process. These are the component subprocesses of
the sequence corresponding to the expanded buying process. The
detailed buying sequence involves a sequence of component
sub-processes corresponding to putting the book into a cart, followed
by a signing-in choice, followed by a method of payment selection. The
signing-in choice process is itself a composite process which offers
the alternatives of signing in as a new user (creating an account) or
using a stored profile instead. Each of these processes is itself
composite, bottoming out in a sequence of atomic processes
corresponding to signing in or creating a new account/profile.  

  --> 
<!--  Expand and Collapse relations for the CongoBuy Process 
  --> 
<daml:Class rdf:about="#CongoBuy">
<rdfs:subClassOf>
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#expand" /> 
  <daml:toClass rdf:resource="#ExpandedCongoBuy" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
  </daml:Class>
<daml:Class rdf:about="#ExpandedCongoBuy">
<rdfs:subClassOf>
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#collapse" /> 
  <daml:toClass rdf:resource="#CongoBuy" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
  </daml:Class>
<!-- 
 
The top level process is a sequence whose components are an atomic
process, LocateBook and a composite process CongoBuyBook


  --> 
<daml:Class rdf:ID="ExpandedCongoBuy">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#CompositeProcess" /> 
<rdfs:subClassOf>
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#composedOf" /> 
<daml:toClass>
<daml:Class>
<daml:intersectionOf rdf:parseType="daml:collection">
  <daml:Class rdf:about="process:Sequence" /> 
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#components" /> 
<daml:toClass>
<daml:Class>
<daml:listOfInstancesOf rdf:parseType="daml:collection">
  <daml:Class rdf:about="#LocateBook" /> 
  <daml:Class rdf:about="#CongoBuyBook" /> 
  </daml:listOfInstancesOf>
  </daml:Class>
  </daml:toClass>
  </daml:Restriction>
  </daml:intersectionOf>
  </daml:Class>
  </daml:toClass>
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#expCongoBuyBookName" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#expCongoBuyCreditCardNumber" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#expCongoBuyCreditCardType" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#expCongoBuyCreditCardExpirationDate" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#expCongoBuyDeliveryAddress" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#expCongoBuyPackagingSelection" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#expCongoBuyDeliveryTypeSelection" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
  </daml:Class>
<!-- 
 The following inputs and outputs of ExpandedCongoBuy are derived
from the corresponding inputs and outputs of its atomic subprocesses
(as indicated by their sameValuesAs properties), and will normally
be computed automatically by DAML-S tools.  For example,
ExpandedCongoBuy uses an input, congoBuyBookName, that's the same as
the bookName input to atomic process LocateBook.  

  --> 
<rdf:Property rdf:ID="expCongoBuyBookName">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#ExpandedCongoBuy" /> 
  <rdfs:range rdf:resource="http://www.w3.org/2000/10/XMLSchema#string" /> 
  <daml:sameValuesAs rdf:resource="#bookName" /> 
  </rdf:Property>
<rdf:Property rdf:ID="expCongoBuySignInInfo">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#ExpandedCongoBuy" /> 
  <rdfs:range rdf:resource="#SignInData" /> 
  <daml:sameValuesAs rdf:resource="#signInInfo" /> 
  </rdf:Property>
<rdf:Property rdf:ID="expCongoBuyCreateAcctInfo">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#ExpandedCongoBuy" /> 
  <rdfs:range rdf:resource="#AcctInfo" /> 
  <daml:sameValuesAs rdf:resource="#createAcctInfo" /> 
  </rdf:Property>
<rdf:Property rdf:ID="expCongoBuyCreditCardNumber">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#ExpandedCongoBuy" /> 
  <rdfs:range rdf:resource="http://www.w3.org/2000/10/XMLSchema#decimal" /> 
  <daml:sameValuesAs rdf:resource="#creditCardNumber" /> 
  </rdf:Property>
<rdf:Property rdf:ID="expCongoBuyCreditCardType">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#ExpandedCongoBuy" /> 
  <rdfs:range rdf:resource="#CreditCardType" /> 
  <daml:sameValuesAs rdf:resource="#creditCardType" /> 
  </rdf:Property>
<rdf:Property rdf:ID="expCongoBuyCreditCardExpirationDate">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#ExpandedCongoBuy" /> 
  <rdfs:range rdf:resource="http://www.ai.sri.com/~daml/ontologies/sri-basic/1-0/Time.daml#Instant" /> 
  <daml:sameValuesAs rdf:resource="#creditCardExpirationDate" /> 
  </rdf:Property>
<rdf:Property rdf:ID="expCongoBuyDeliveryAddress">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#ExpandedCongoBuy" /> 
  <rdfs:range rdf:resource="http://www.w3.org/2000/10/XMLSchema#string" /> 
  <daml:sameValuesAs rdf:resource="#deliveryAddress" /> 
  </rdf:Property>
<rdf:Property rdf:ID="expCongoBuyPackagingSelection">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#ExpandedCongoBuy" /> 
  <rdfs:range rdf:resource="#PackagingType" /> 
  <daml:sameValuesAs rdf:resource="#packagingSelection" /> 
  </rdf:Property>
<rdf:Property rdf:ID="expCongoBuyDeliveryTypeSelection">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#ExpandedCongoBuy" /> 
  <rdfs:range rdf:resource="#DeliveryType" /> 
  <daml:sameValuesAs rdf:resource="#deliveryTypeSelection" /> 
  </rdf:Property>
<rdf:Property rdf:ID="expCongoBuyCreateAcctOutput">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#output" /> 
  <rdfs:domain rdf:resource="#ExpandedCongoBuy" /> 
  <rdfs:range rdf:resource="#CreateAcctOutputType" /> 
  <daml:sameValuesAs rdf:resource="#createAcctOutput" /> 
  </rdf:Property>
<!-- 
 CongoBuyBook is a sequence whose components are a composite
process, BuySequence, followed by two atomic processes
SpecifyDeliveryDetails, and then FinalizeBuy 

  --> 
<daml:Class rdf:ID="CongoBuyBook">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#CompositeProcess" /> 
<rdfs:subClassOf>
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#composedOf" /> 
<daml:toClass>
<daml:Class>
<daml:intersectionOf rdf:parseType="daml:collection">
  <daml:Class rdf:about="process:Sequence" /> 
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#components" /> 
<daml:toClass>
<daml:Class>
<daml:listOfInstancesOf rdf:parseType="daml:collection">
  <daml:Class rdf:about="#BuySequence" /> 
  <daml:Class rdf:about="#SpecifyDeliveryDetails" /> 
  <daml:Class rdf:about="#FinalizeBuy" /> 
  </daml:listOfInstancesOf>
  </daml:Class>
  </daml:toClass>
  </daml:Restriction>
  </daml:intersectionOf>
  </daml:Class>
  </daml:toClass>
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#congoBuyBookBookName" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#congoBuyBookCreditCardNumber" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#congoBuyBookCreditCardType" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#congoBuyBookCreditCardExpirationDate" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#congoBuyBookDeliveryAddress" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#congoBuyBookPackagingSelection" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#congoBuyBookDeliveryTypeSelection" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
  </daml:Class>
<!-- 
 The following inputs and outputs of CongoBuyBook are derived
from the corresponding inputs and outputs of its atomic subprocesses
(as indicated by their sameValuesAs properties), and will normally
be computed automatically by DAML-S tools. 

  --> 
<rdf:Property rdf:ID="congoBuyBookBookName">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#CongoBuyBook" /> 
  <rdfs:range rdf:resource="http://www.w3.org/2000/10/XMLSchema#string" /> 
  <daml:sameValuesAs rdf:resource="#bookName" /> 
  </rdf:Property>
<rdf:Property rdf:ID="congoBuyBookCreateAcctInfo">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#CongoBuyBook" /> 
  <rdfs:range rdf:resource="#AcctInfo" /> 
  <daml:sameValuesAs rdf:resource="#createAcctInfo" /> 
  </rdf:Property>
<rdf:Property rdf:ID="congoBuyBookCreateAcctOutput">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#output" /> 
  <rdfs:domain rdf:resource="#CongoBuyBook" /> 
  <rdfs:range rdf:resource="#CreateAcctOutputType" /> 
  <daml:sameValuesAs rdf:resource="#createAcctOutput" /> 
  </rdf:Property>
<rdf:Property rdf:ID="congoBuyBookSignInInfo">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#CongoBuyBook" /> 
  <rdfs:range rdf:resource="#SignInData" /> 
  <daml:sameValuesAs rdf:resource="#signInInfo" /> 
  </rdf:Property>
<rdf:Property rdf:ID="congoBuyBookCreditCardNumber">
  <rdfs:comment>NOTE: INTEGER IS NOT SUPPORTED YET IN DAML-L</rdfs:comment> 
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#CongoBuyBook" /> 
  <rdfs:range rdf:resource="http://www.w3.org/2000/10/XMLSchema#decimal" /> 
  <daml:sameValuesAs rdf:resource="#creditCardNumber" /> 
  </rdf:Property>
<rdf:Property rdf:ID="congoBuyBookCreditCardType">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#CongoBuyBook" /> 
  <rdfs:range rdf:resource="#CreditCardType" /> 
  <daml:sameValuesAs rdf:resource="#creditCardType" /> 
  </rdf:Property>
<rdf:Property rdf:ID="congoBuyBookCreditCardExpirationDate">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#CongoBuyBook" /> 
  <rdfs:range rdf:resource="http://www.ai.sri.com/~daml/ontologies/sri-basic/1-0/Time.daml#Instant" /> 
  <daml:sameValuesAs rdf:resource="#creditCardExpirationDate" /> 
  </rdf:Property>
<rdf:Property rdf:ID="congoBuyBookDeliveryAddress">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#CongoBuyBook" /> 
  <rdfs:range rdf:resource="http://www.w3.org/2000/10/XMLSchema#string" /> 
  <daml:sameValuesAs rdf:resource="#deliveryAddress" /> 
  </rdf:Property>
<rdf:Property rdf:ID="congoBuyBookPackagingSelection">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#CongoBuyBook" /> 
  <rdfs:range rdf:resource="#PackagingType" /> 
  <daml:sameValuesAs rdf:resource="#packagingSelection" /> 
  </rdf:Property>
<rdf:Property rdf:ID="congoBuyBookDeliveryTypeSelection">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#CongoBuyBook" /> 
  <rdfs:range rdf:resource="#DeliveryType" /> 
  <daml:sameValuesAs rdf:resource="#deliveryTypeSelection" /> 
  </rdf:Property>
<!-- 
 
BuySequence is a sequence whose components are an atomic
process PutInCart, followed by a composite process SignInAlternatives, followed
by an atomic process SpecifyPaymentMethod 


  --> 
<daml:Class rdf:ID="BuySequence">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#CompositeProcess" /> 
<rdfs:subClassOf>
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#composedOf" /> 
<daml:toClass>
<daml:Class>
<daml:intersectionOf rdf:parseType="daml:collection">
  <daml:Class rdf:about="process:Sequence" /> 
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#components" /> 
<daml:toClass>
<daml:Class>
<daml:listOfInstancesOf rdf:parseType="daml:collection">
  <daml:Class rdf:about="#PutInCart" /> 
  <daml:Class rdf:about="#SignInAlternatives" /> 
  <daml:Class rdf:about="#SpecifyPaymentMethod" /> 
  </daml:listOfInstancesOf>
  </daml:Class>
  </daml:toClass>
  </daml:Restriction>
  </daml:intersectionOf>
  </daml:Class>
  </daml:toClass>
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#buySequenceBookName" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#buySequenceCreditCardNumber" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#buySequenceCreditCardType" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#buySequenceCreditCardExpirationDate" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
  </daml:Class>
<!-- 
 The following inputs and outputs of BuySequence are derived
from the corresponding inputs and outputs of its atomic subprocesses
(as indicated by their sameValuesAs properties), and will normally
be computed automatically by DAML-S tools. 

  --> 
<rdf:Property rdf:ID="buySequenceBookName">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#BuySequence" /> 
  <rdfs:range rdf:resource="http://www.w3.org/2000/10/XMLSchema#string" /> 
  <daml:sameValuesAs rdf:resource="#bookName" /> 
  </rdf:Property>
<rdf:Property rdf:ID="buySequenceCreateAcctInfo">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#BuySequence" /> 
  <rdfs:range rdf:resource="#AcctInfo" /> 
  <daml:sameValuesAs rdf:resource="#createAcctInfo" /> 
  </rdf:Property>
<rdf:Property rdf:ID="buySequenceCreateAcctOutput">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#output" /> 
  <rdfs:domain rdf:resource="#BuySequence" /> 
  <rdfs:range rdf:resource="#CreateAcctOutputType" /> 
  <daml:sameValuesAs rdf:resource="#createAcctOutput" /> 
  </rdf:Property>
<rdf:Property rdf:ID="buySequenceSignInInfo">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#BuySequence" /> 
  <rdfs:range rdf:resource="#SignInData" /> 
  <daml:sameValuesAs rdf:resource="#signInInfo" /> 
  </rdf:Property>
<rdf:Property rdf:ID="buySequenceCreditCardNumber">
  <rdfs:comment>NOTE: INTEGER IS NOT SUPPORTED YET IN DAML-L</rdfs:comment> 
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#BuySequence" /> 
  <rdfs:range rdf:resource="http://www.w3.org/2000/10/XMLSchema#decimal" /> 
  <daml:sameValuesAs rdf:resource="#creditCardNumber" /> 
  </rdf:Property>
<rdf:Property rdf:ID="buySequenceCreditCardType">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#BuySequence" /> 
  <rdfs:range rdf:resource="#CreditCardType" /> 
  <daml:sameValuesAs rdf:resource="#creditCardType" /> 
  </rdf:Property>
<rdf:Property rdf:ID="buySequenceCreditCardExpirationDate">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#BuySequence" /> 
  <rdfs:range rdf:resource="http://www.ai.sri.com/~daml/ontologies/sri-basic/1-0/Time.daml#Instant" /> 
  <daml:sameValuesAs rdf:resource="#creditCardExpirationDate" /> 
  </rdf:Property>
<!-- 
 SignInAlternatives is a choice whose components are a composite
process CreateAcctSequence and a composite process SignInSequence 


  --> 
<daml:Class rdf:ID="SignInAlternatives">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#CompositeProcess" /> 
<rdfs:subClassOf>
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#composedOf" /> 
<daml:toClass>
<daml:Class>
<daml:intersectionOf rdf:parseType="daml:collection">
  <daml:Class rdf:about="process:Choice" /> 
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#components" /> 
<daml:toClass>
<daml:Class>
<daml:listOfInstancesOf rdf:parseType="daml:collection">
  <daml:Class rdf:about="#CreateAcctSequence" /> 
  <daml:Class rdf:about="#SignInSequence" /> 
  </daml:listOfInstancesOf>
  </daml:Class>
  </daml:toClass>
  </daml:Restriction>
  </daml:intersectionOf>
  </daml:Class>
  </daml:toClass>
  </daml:Restriction>
  </rdfs:subClassOf>
  </daml:Class>
<!-- 
 The following inputs and outputs of SignInAlternatives are derived
from the corresponding inputs and outputs of its atomic subprocesses
(as indicated by their sameValuesAs properties), and will normally
be computed automatically by DAML-S tools. 

  --> 
<rdf:Property rdf:ID="signInAlternativesCreateAcctInfo">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#SignInAlternatives" /> 
  <rdfs:range rdf:resource="#AcctInfo" /> 
  <daml:sameValuesAs rdf:resource="#createAcctInfo" /> 
  </rdf:Property>
<rdf:Property rdf:ID="signInAlternativesCreateAcctOutput">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#output" /> 
  <rdfs:domain rdf:resource="#SignInAlternatives" /> 
  <rdfs:range rdf:resource="#CreateAcctOutputType" /> 
  <daml:sameValuesAs rdf:resource="#createAcctOutput" /> 
  </rdf:Property>
<rdf:Property rdf:ID="signInAlternativesSignInInfo">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#SignInAlternatives" /> 
  <rdfs:range rdf:resource="#SignInData" /> 
  <daml:sameValuesAs rdf:resource="#signInInfo" /> 
  </rdf:Property>
<!-- 
 
SignInSequence is a sequence whose components are an atomic process SignIn
followed by an atomic process LoadProfile 


  --> 
<daml:Class rdf:ID="SignInSequence">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#CompositeProcess" /> 
<rdfs:subClassOf>
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#composedOf" /> 
<daml:toClass>
<daml:Class>
<daml:intersectionOf rdf:parseType="daml:collection">
  <daml:Class rdf:about="process:Sequence" /> 
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#components" /> 
<daml:toClass>
<daml:Class>
<daml:listOfInstancesOf rdf:parseType="daml:collection">
  <daml:Class rdf:about="#SignIn" /> 
  <daml:Class rdf:about="#LoadProfile" /> 
  </daml:listOfInstancesOf>
  </daml:Class>
  </daml:toClass>
  </daml:Restriction>
  </daml:intersectionOf>
  </daml:Class>
  </daml:toClass>
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#signInSequenceSignInInfo" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
  </daml:Class>
<!-- 
 The following input of SignInSequence are derived
from the corresponding inputs and outputs of its atomic subprocesses
(as indicated by their sameValuesAs properties), and will normally
be computed automatically by DAML-S tools. 

  --> 
<rdf:Property rdf:ID="signInSequenceSignInInfo">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#SignInSequence" /> 
  <rdfs:range rdf:resource="#SignInData" /> 
  <daml:sameValuesAs rdf:resource="#signInInfo" /> 
  </rdf:Property>
<!-- 
 
CreateAcctSequence is a sequence whose components are an atomic process 
CreateAcct followed by an atomic process CreateProfile (of course this
can/should be expanded) followed by an atomic process LoadProfile 


  --> 
<daml:Class rdf:ID="CreateAcctSequence">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#CompositeProcess" /> 
<rdfs:subClassOf>
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#composedOf" /> 
<daml:toClass>
<daml:Class>
<daml:intersectionOf rdf:parseType="daml:collection">
  <daml:Class rdf:about="process:Sequence" /> 
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#components" /> 
<daml:toClass>
<daml:Class>
<daml:listOfInstancesOf rdf:parseType="daml:collection">
  <daml:Class rdf:about="#CreateAcct" /> 
  <daml:Class rdf:about="#CreateProfile" /> 
  <daml:Class rdf:about="#LoadProfile" /> 
  </daml:listOfInstancesOf>
  </daml:Class>
  </daml:toClass>
  </daml:Restriction>
  </daml:intersectionOf>
  </daml:Class>
  </daml:toClass>
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#createAcctSequenceCreateAcctInfo" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#createAcctSequenceCreateAcctOutput" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
  </daml:Class>
<!-- 
 The following inputs and outputs of CreateAcctSequence are
derived from the corresponding inputs and outputs of its atomic
subprocesses (as indicated by their sameValuesAs properties), and
will normally be computed automatically by DAML-S tools. 

  --> 
<rdf:Property rdf:ID="createAcctSequenceCreateAcctInfo">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#CreateAcctSequence" /> 
  <rdfs:range rdf:resource="#AcctInfo" /> 
  <daml:sameValuesAs rdf:resource="#createAcctInfo" /> 
  </rdf:Property>
<rdf:Property rdf:ID="createAcctSequenceCreateAcctOutput">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#output" /> 
  <rdfs:domain rdf:resource="#CreateAcctSequence" /> 
  <rdfs:range rdf:resource="#CreateAcctOutputType" /> 
  <daml:sameValuesAs rdf:resource="#createAcctOutput" /> 
  </rdf:Property>
<!-- 
###################################################
    THE ATOMIC PROCESSES (used by ExpandedCongoBuy)
    ###################################################

  --> 
<!--  ATOMIC PROCESSES 
  --> 
<!-- 
 The following processes are the Web-accessible programs that Congo
Inc. is making available at its web site.  They form the building
blocks for the composite service ExpandedCongoBuy 

  --> 
<daml:Class rdf:ID="LocateBook">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#AtomicProcess" /> 
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#bookName" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
  </daml:Class>
<rdf:Property rdf:ID="bookName">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#LocateBook" /> 
  <rdfs:range rdf:resource="http://www.w3.org/2000/10/XMLSchema#string" /> 
  </rdf:Property>
<!-- 
 If the book described by "bookName" is in Congo's catalogue,
then the output of LocateBook is the description of the book and the
prices.  If the book is not in Congo's catalogues, then the output is
a message to this effect.  The output of LocateBook is thus described
as a conditional output.  We illustrate the notion of a conditional
output below in terms of the bookDescription.
 

  --> 
<rdf:Property rdf:ID="bookDescription">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#conditionalOutput" /> 
  <rdfs:domain rdf:resource="#LocateBook" /> 
  <rdfs:range rdf:resource="InCatalogueBookDescription" /> 
  </rdf:Property>
<daml:Class rdf:ID="InCatalogueBookDescription">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#ConditionalOutput" /> 
  </daml:Class>
<rdf:Property rdf:ID="condInCatalogueBookDescription">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#coCondition" /> 
  <rdfs:domain rdf:resource="#InCatalogueBookDescription" /> 
  <rdfs:range rdf:resource="#InCatalogueBook" /> 
  </rdf:Property>
<rdf:Property rdf:ID="outInCatalogueBookDescription">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#coOutput" /> 
  <rdfs:domain rdf:resource="#InCatalogueBookDescription" /> 
  <rdfs:range rdf:resource="#TextBookDescription" /> 
  </rdf:Property>
<daml:Class rdf:ID="TextBookDescription">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/2001/03/daml+oil#Thing" /> 
  </daml:Class>
<!-- 
 A very simple version of the put in cart event, in which the
cart is a bag of books (each item being a book). This illustrates
another way of specifying the input, using the anonymous subclass with
a restriction 


  --> 
<daml:Class rdf:ID="PutInCart">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#AtomicProcess" /> 
<rdfs:subClassOf>
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <daml:sameValuesAs rdf:resource="#bookName" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
  </daml:Class>
<!--  Sign in is a process that requires input of signin info 
  --> 
<daml:Class rdf:ID="SignIn">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#AtomicProcess" /> 
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#signInInfo" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
  </daml:Class>
<rdf:Property rdf:ID="signInInfo">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#SignIn" /> 
  <rdfs:range rdf:resource="#SignInData" /> 
  </rdf:Property>
<!--  CreateAcct requires input of profile and signin info 
  --> 
<daml:Class rdf:ID="CreateAcct">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#AtomicProcess" /> 
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#createAcctInfo" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#createAcctOutput" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
  </daml:Class>
<rdf:Property rdf:ID="createAcctInfo">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#CreateAcct" /> 
  <rdfs:range rdf:resource="#AcctInfo" /> 
  </rdf:Property>
<rdf:Property rdf:ID="createAcctOutput">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#output" /> 
  <rdfs:domain rdf:resource="#CreateAcct" /> 
  <rdfs:range rdf:resource="#CreateAcctOutputType" /> 
  </rdf:Property>
<!-- 
 
Load Profile wants to place a restriction that not only 
the account, but the profile exists. This could be a value of
the account exists property. A bit of a kludge, should be
changed 


  --> 
<daml:Class rdf:ID="LoadProfile">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#AtomicProcess" /> 
<rdfs:subClassOf>
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#precondition" /> 
  <daml:toClass rdf:resource="#ProfileExists" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
  </daml:Class>
<daml:Class rdf:ID="ProfileExists">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#Condition" /> 
<rdfs:subClassOf>
<daml:Restriction>
  <daml:onProperty rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#Value" /> 
  <daml:hasValue rdf:ID="True" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
  </daml:Class>
<!--  SpecifyPaymentMethod 
  --> 
<daml:Class rdf:ID="SpecifyPaymentMethod">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#AtomicProcess" /> 
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#creditCardNumber" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#creditCardType" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#creditCardExpirationDate" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
  </daml:Class>
<rdf:Property rdf:ID="creditCardNumber">
  <rdfs:comment>NOTE: INTEGER IS NOT SUPPORTED YET IN DAML-L</rdfs:comment> 
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#SpecifyPaymentMethod" /> 
  <rdfs:range rdf:resource="http://www.w3.org/2000/10/XMLSchema#decimal" /> 
  </rdf:Property>
<rdf:Property rdf:ID="creditCardType">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#SpecifyPaymentMethod" /> 
  <rdfs:range rdf:resource="#CreditCardType" /> 
  </rdf:Property>
<rdf:Property rdf:ID="creditCardExpirationDate">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#SpecifyPaymentMethod" /> 
  <rdfs:range rdf:resource="http://www.ai.sri.com/~daml/ontologies/sri-basic/1-0/Time.daml#Instant" /> 
  </rdf:Property>
<!--  SpecifyDeliveryDetails 
  --> 
<daml:Class rdf:ID="SpecifyDeliveryDetails">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#AtomicProcess" /> 
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#deliveryAddress" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
<rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#packagingSelection" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
+ <rdfs:subClassOf>
<daml:Restriction daml:cardinality="1">
  <daml:onProperty rdf:resource="#deliveryTypeSelection" /> 
  </daml:Restriction>
  </rdfs:subClassOf>
  </daml:Class>
<!--  ADDRESS IS A LITERAL FOR THE TIME BEING 
  --> 
<rdf:Property rdf:ID="deliveryAddress">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#SpecifyDeliveryDetails" /> 
  <rdfs:range rdf:resource="http://www.w3.org/2000/10/XMLSchema#string" /> 
  </rdf:Property>
<rdf:Property rdf:ID="packagingSelection">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#SpecifyDeliveryDetails" /> 
  <rdfs:range rdf:resource="#PackagingType" /> 
  </rdf:Property>
<rdf:Property rdf:ID="deliveryTypeSelection">
  <rdfs:subPropertyOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#input" /> 
  <rdfs:domain rdf:resource="#SpecifyDeliveryDetails" /> 
  <rdfs:range rdf:resource="#DeliveryType" /> 
  </rdf:Property>
<!--  FinalizeBuy 
  --> 
<daml:Class rdf:ID="FinalizeBuy">
  <rdfs:subClassOf rdf:resource="http://www.daml.org/services/daml-s/2001/10/Process.daml#AtomicProcess" /> 
  </daml:Class>
  </rdf:RDF>